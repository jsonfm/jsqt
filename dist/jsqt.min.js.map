{"version":3,"file":"jsqt.min.js","sources":["../../src/components/base.ts","../../src/components/range.ts","../../src/components/button.ts","../../src/components/dial.ts","../../src/components/input.ts","../../src/components/label.ts","../../src/components/toggle.ts"],"sourcesContent":["export class Base {\n\telement: any;\n\t/**\n\t * A base class for objects\n\t * @param {string} elementId\n\t */\n\tconstructor(elementId: string) {\n\t\tthis.element = document.getElementById(elementId);\n\t\tif (!this.element) {\n\t\t\tthrow new Error(\n\t\t\t\t`Element with id = ${elementId} not exists! Please check it.`\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the dom element exists\n\t */\n\texists() {\n\t\treturn !!this.element;\n\t}\n\n\t/**\n\t * A cool API for use addEventListener\n\t * @param {string} event - a name\n\t * @param {function} callback - a function\n\t */\n\ton(event: string, callback: Function) {\n\t\tif (this.element) {\n\t\t\t// Special Events\n\t\t\tif (event === \"pressed\") {\n\t\t\t\tthis.element.addEventListener(\"mousedown\", callback, { passive: true });\n\t\t\t\tthis.element.addEventListener(\"touchstart\", callback, { passive: true });\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (event === \"release\") {\n\t\t\t\tthis.element.addEventListener(\"mouseup\", callback, { passive: true });\n\t\t\t\tthis.element.addEventListener(\"touchend\", callback, { passive: true });\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (event === \"move\") {\n\t\t\t\tthis.element.addEventListener(\"mousemove\", callback, { passive: true });\n\t\t\t\tthis.element.addEventListener(\"touchmove\", callback, { passive: true });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Normal Events\n\t\t\tthis.element.addEventListener(event, callback);\n\t\t}\n\t}\n\n  /**\n   * A cool API for removeEventListener\n   */\n  off(event: string, callback: Function){\n    this.element.removeEventListener(event, callback);\n  }\n\n\t/**\n\t * Emits an event\n\t */\n\temit(event: string | Event) {\n\t\tif (this.element) this.element.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Updates the enabled value\n\t * @param {boolean} enabled\n\t */\n\tsetEnabled(enabled = true) {\n\t\tif (this.element) {\n\t\t\tthis.element.disabled = !enabled;\n\t\t}\n\t}\n\n\t/** Returns the current enabled status of the element. */\n\tisEnabled(): boolean {\n\t\tif (this.element) return !this.element.disabled;\n\t\treturn false;\n\t}\n\n\t/** Returns the element value property */\n\tvalue() {\n\t\tif (this.element) {\n\t\t\treturn this.element?.value;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Updates element value property.\n\t * @param {string | number | boolean} value\n\t */\n\tsetValue(value: string | number | boolean) {\n\t\tif (this.element) this.element.value = value;\n\t}\n\n\t/**\n\t * Updates element styles\n\t * @param {string} style\n\t */\n\tsetStyles(style: string) {\n\t\tif (this.element) this.element.style = style;\n\t}\n\n\t/** Returns the element dom styles */\n\tgetStyles() {\n\t\tif (this.element) return this.element.style;\n\t}\n\n\t/**\n\t * Updates className property of the dom element\n\t * @param {string} className\n\t */\n\tsetClassName(className: string) {\n\t\tif (this.element) this.element.className = className;\n\t}\n\n\t/** Returns the current className */\n\tgetClassName() {\n\t\tif (this.exists()) return this.element.className;\n\t}\n}\n","import { Base } from \"./base\";\n\n\n/** A Custom Range Component */\nexport class Range extends Base {\n\n\tmin: number = 0;\n\tmax: number = 100;\n    _value: number = 10;\n\n\tconstructor(\n        elementId: string,\n        min: number = 0,\n        max: number = 0,\n        value: number = 30,\n\n    ) {\n\t\tsuper(elementId);\n        this.min = min;\n        this.max = max;\n        this._value = value;\n\t}\n\n    /**\n     * Updates the minimum value.\n     * @param value \n     */\n    setMinimum(value: number) {\n        this.min = value;\n    }\n\n    /**\n     * Updates the maximum value.\n     */\n    setMaximum(value: number) {\n        this.max = value;\n    }\n\n    /**\n     * Updates the current value.\n     */\n    setValue(value: number) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value.\n     */\n    getValue() {\n        return this._value;\n    }\n\n}\n","import { Base } from \"./base\";\n\n/** A custom buttom */\nexport class Button extends Base {\n\tconstructor(elementId: string) {\n\t\tsuper(elementId);\n\t}\n}\n","import { Range } from \"./range\";\n\ntype DialEvent = MouseEvent | TouchEvent;\n\n/** A Custom Dial */\nexport class Dial extends Range {\n\n\tprivate _pressed: boolean = false;\n\tprivate _angle: number = 0;\n\n\tconstructor(\n\t\telementId: string,\n\t\tmin: number = 0,\n\t\tmax: number = 100,\n\t\tvalue: number = 20\n\t) {\n\t\tsuper(elementId, min, max, value);\n\t\tthis.rotate(0);\n\n\t\t// Events\n\t\tthis.on(\"pressed\", (e: DialEvent) => this.setPressed(true));\n\t\tthis.on(\"release\", (e: DialEvent) => this.setPressed(false));\n\t\tthis.on(\"move\", this.onRotate);\n\t}\n\n\t/**\n\t * Returns the current angle value.\n\t */\n\tangle(fixed: boolean = false): number {\n\t\tif(fixed){\n\t\t\treturn this.fixAngle(this._angle);\n\t\t}\n\t\treturn this._angle;\n\t}\n\n\t/**\n\t * Returns the current value\n\t */\n\tvalue() {\n\t\tconst angle = this.angle(true); // angle between 0 and 360;\n\t\tconst step = 360 / (this.max - this.min);\n\t\tconst value = angle / step + this.min;\n\t\treturn value;\n\t}\n\n\tsetValue(value: number) {\n\t\tif(value < this.min || value > this.max) {\n\t\t\tthrow new Error(`${value} is outside of the range between ${this.min} and ${this.max}`);\n\t\t};\n\t\tconst step = 360 / (this.max - this.min);\n\t\tconst angle = (value - this.min) * step;\n\t\tthis._angle = angle;\n\t\tthis._value = value;\n\t\tthis.rotate(angle);\n\t}\n\n\t/**\n\t * Updates pressed state\n\t * @param pressed - new pressed value\n\t */\n\tsetPressed(pressed: boolean) {\n\t\tthis._pressed = pressed;\n\t}\n\n\t/**\n\t * fit an angle on the range between 0 and 360degrees.\n\t * @returns \n\t */\n\tfixAngle(angle: number) {\n\t\tlet fixed = angle;\n\t\tif(angle <= 0){\n\t\t\tfixed += 360\n\t\t}\n\t\treturn fixed;\n\t}\n\n\t/**\n\t * Applies a rotation transform over the current dom element\n\t * @param angle - angle in degrees.\n\t */\n\trotate(angle: number) {\n\t\tif (this.element) {\n\t\t\tthis.element.style.transform = `rotate(${angle}deg)`;\n\t\t}\n\t}\n\n\t/**\n\t * Rotates Dials and updates its angle position.\n\t * @param e - a mouse or a touch event\n\t */\n\tonRotate = (e: DialEvent) => {\n\t\tconst angle = this.calculateAngle(e, false);\n\t\tif (!!this._pressed) {\n\t\t\tthis.rotate(angle);\n\t\t}\n\t};\n\n\t/**\n\t * Calculates the current dial angle\n\t * @param e - a mouse or a touch events\n\t * @param fixed - fix angle ?\n\t */\n\tcalculateAngle = (e: DialEvent, fixed: boolean = true) => {\n\t\tconst dial = this.element.getBoundingClientRect();\n\n\t\tconst center = {\n\t\t\tx: dial.left + dial.width / 2,\n\t\t\ty: dial.top + dial.height / 2\n\t\t};\n\n\t\tlet x = 0;\n\t\tlet y = 0;\n\n\t\tif (e instanceof MouseEvent) {\n\t\t\tx = e.clientX;\n\t\t\ty = e.clientY;\n\t\t}\n\n\t\tif (e instanceof TouchEvent) {\n\t\t\tx = e.touches[0].clientX;\n\t\t\ty = e.touches[0].clientY;\n\t\t}\n\n\t\tconst deltaX = x - center.x;\n\t\tconst deltaY = y - center.y;\n\n\t\tconst rad = Math.atan2(deltaY, deltaX);\n\t\tlet angle = rad * (180 / Math.PI);\n\n\t\tthis._angle = angle;\n\n\t\tif(this._pressed){\n\t\t\tthis.emit(new Event(\"change\"));\n\t\t}\n\t\t\n\t\tif (fixed && angle < 0 && angle >= -180) {\n\t\t\tangle += 180;\n\t\t}\n\n\t\treturn angle;\n\t};\n}\n","import { Base } from \"./base\";\n\n/** A custom buttom */\nexport class Input extends Base {\n\tconstructor(elementId: string) {\n\t\tsuper(elementId);\n\t}\n}\n","import { Base } from \"./base\";\n\n/** A custom label */\nexport class Label extends Base {\n\tconstructor(elementId: string) {\n\t\tsuper(elementId);\n\t}\n\n\t/**\n\t * Updates text of the label\n\t */\n\tsetText(text: string) {\n\t\tif (this.element) this.element.innerHTML = text;\n\t}\n\n\t/**\n\t * Returns the text of the label\n\t */\n\ttext() {\n\t\tif (this.element) return this.element.innerHTML;\n\t}\n\n\t/**\n\t * Clears text of the label\n\t */\n\tclear() {\n\t\tif (this.element) this.element.innerHTML = \"\";\n\t}\n}\n","import { Base } from \"./base\";\n\n/** A Binary (Toggle) button */\nexport class Toggle extends Base {\n\tchecked: boolean;\n\tonStyle: string;\n\toffStyle: string;\n\t/**\n\t *\n\t * @param {string} elementId - the id of the element\n\t * @param {string} onStyle - a css class name\n\t * @param {string} offStyle - a css class name\n\t */\n\tconstructor(elementId: string, onStyle: string, offStyle: string) {\n\t\tsuper(elementId);\n\t\tthis.checked = false;\n\t\tthis.onStyle = onStyle;\n\t\tthis.offStyle = offStyle;\n\t\tthis.on(\"click\", this.toggle.bind(this));\n\t\tthis.updateStyle();\n\t}\n\n\t/**\n\t * Updates checked value of the button\n\t * @param {boolean} checked - checked value\n\t */\n\tsetChecked(checked = true) {\n\t\tthis.checked = checked;\n\t\tthis.updateStyle();\n\t}\n\n\t/** Returns checked statuss */\n\tisChecked() {\n\t\treturn this.checked;\n\t}\n\n\t/** Updates class styles */\n\tupdateStyle() {\n\t\tif (this.element) {\n\t\t\tthis.element.className = this.isChecked() ? this.onStyle : this.offStyle;\n\t\t}\n\t}\n\n\t/** Toggles the check status */\n\ttoggle() {\n\t\tthis.checked = !this.checked;\n\t\tthis.updateStyle();\n\t}\n}\n"],"names":["Base","constructor","elementId","this","element","document","getElementById","Error","exists","on","event","callback","addEventListener","passive","off","removeEventListener","emit","dispatchEvent","setEnabled","enabled","disabled","isEnabled","value","_a","setValue","setStyles","style","getStyles","setClassName","className","getClassName","Range","min","max","super","_value","setMinimum","setMaximum","getValue","_pressed","_angle","onRotate","e","angle","calculateAngle","rotate","fixed","dial","getBoundingClientRect","center","left","width","top","height","x","y","MouseEvent","clientX","clientY","TouchEvent","touches","deltaX","deltaY","Math","atan2","PI","Event","setPressed","fixAngle","step","pressed","transform","setText","text","innerHTML","clear","onStyle","offStyle","checked","toggle","bind","updateStyle","setChecked","isChecked"],"mappings":"0EAAaA,EAMZC,YAAYC,GAEX,GADAC,KAAKC,QAAUC,SAASC,eAAeJ,IAClCC,KAAKC,QACT,MAAM,IAAIG,MACT,qBAAqBL,iCAGvB,CAKDM,SACC,QAASL,KAAKC,OACd,CAODK,GAAGC,EAAeC,GACjB,GAAIR,KAAKC,QAAS,CAEjB,GAAc,YAAVM,EAGH,OAFAP,KAAKC,QAAQQ,iBAAiB,YAAaD,EAAU,CAAEE,SAAS,SAChEV,KAAKC,QAAQQ,iBAAiB,aAAcD,EAAU,CAAEE,SAAS,IAGlE,GAAc,YAAVH,EAGH,OAFAP,KAAKC,QAAQQ,iBAAiB,UAAWD,EAAU,CAAEE,SAAS,SAC9DV,KAAKC,QAAQQ,iBAAiB,WAAYD,EAAU,CAAEE,SAAS,IAGhE,GAAc,SAAVH,EAGH,OAFAP,KAAKC,QAAQQ,iBAAiB,YAAaD,EAAU,CAAEE,SAAS,SAChEV,KAAKC,QAAQQ,iBAAiB,YAAaD,EAAU,CAAEE,SAAS,IAKjEV,KAAKC,QAAQQ,iBAAiBF,EAAOC,EACrC,CACD,CAKAG,IAAIJ,EAAeC,GACjBR,KAAKC,QAAQW,oBAAoBL,EAAOC,EACzC,CAKFK,KAAKN,GACAP,KAAKC,SAASD,KAAKC,QAAQa,cAAcP,EAC7C,CAMDQ,WAAWC,GAAU,GAChBhB,KAAKC,UACRD,KAAKC,QAAQgB,UAAYD,EAE1B,CAGDE,YACC,QAAIlB,KAAKC,UAAiBD,KAAKC,QAAQgB,QAEvC,CAGDE,cACC,OAAInB,KAAKC,QACW,UAAZD,KAAKC,eAAO,IAAAmB,OAAA,EAAAA,EAAED,MAEf,IACP,CAMDE,SAASF,GACJnB,KAAKC,UAASD,KAAKC,QAAQkB,MAAQA,EACvC,CAMDG,UAAUC,GACLvB,KAAKC,UAASD,KAAKC,QAAQsB,MAAQA,EACvC,CAGDC,YACC,GAAIxB,KAAKC,QAAS,OAAOD,KAAKC,QAAQsB,KACtC,CAMDE,aAAaC,GACR1B,KAAKC,UAASD,KAAKC,QAAQyB,UAAYA,EAC3C,CAGDC,eACC,GAAI3B,KAAKK,SAAU,OAAOL,KAAKC,QAAQyB,SACvC,ECrHI,MAAOE,UAAc/B,EAM1BC,YACOC,EACA8B,EAAc,EACdC,EAAc,EACdX,EAAgB,IAGtBY,MAAMhC,GAXPC,KAAG6B,IAAW,EACd7B,KAAG8B,IAAW,IACX9B,KAAMgC,OAAW,GAUbhC,KAAK6B,IAAMA,EACX7B,KAAK8B,IAAMA,EACX9B,KAAKgC,OAASb,CACpB,CAMEc,WAAWd,GACPnB,KAAK6B,IAAMV,CACd,CAKDe,WAAWf,GACPnB,KAAK8B,IAAMX,CACd,CAKDE,SAASF,GACLnB,KAAKgC,OAASb,CACjB,CAKDgB,WACI,OAAOnC,KAAKgC,MACf,gCC/CC,cAAsBnC,EAC3BC,YAAYC,GACXgC,MAAMhC,EACN,gBCDI,cAAoB6B,EAKzB9B,YACCC,EACA8B,EAAc,EACdC,EAAc,IACdX,EAAgB,IAEhBY,MAAMhC,EAAW8B,EAAKC,EAAKX,GATpBnB,KAAQoC,UAAY,EACpBpC,KAAMqC,OAAW,EAkFzBrC,KAAAsC,SAAYC,IACX,MAAMC,EAAQxC,KAAKyC,eAAeF,GAAG,GAC/BvC,KAAKoC,UACVpC,KAAK0C,OAAOF,EACZ,EAQFxC,KAAAyC,eAAiB,CAACF,EAAcI,GAAiB,KAChD,MAAMC,EAAO5C,KAAKC,QAAQ4C,wBAEpBC,EACFF,EAAKG,KAAOH,EAAKI,MAAQ,EADvBF,EAEFF,EAAKK,IAAML,EAAKM,OAAS,EAG7B,IAAIC,EAAI,EACJC,EAAI,EAEJb,aAAac,aAChBF,EAAIZ,EAAEe,QACNF,EAAIb,EAAEgB,SAGHhB,aAAaiB,aAChBL,EAAIZ,EAAEkB,QAAQ,GAAGH,QACjBF,EAAIb,EAAEkB,QAAQ,GAAGF,SAGlB,MAAMG,EAASP,EAAIL,EACba,EAASP,EAAIN,EAGnB,IAAIN,EADQoB,KAAKC,MAAMF,EAAQD,IACZ,IAAME,KAAKE,IAY9B,OAVA9D,KAAKqC,OAASG,EAEXxC,KAAKoC,UACPpC,KAAKa,KAAK,IAAIkD,MAAM,WAGjBpB,GAASH,EAAQ,GAAKA,IAAU,MACnCA,GAAS,KAGHA,CAAK,EA1HZxC,KAAK0C,OAAO,GAGZ1C,KAAKM,GAAG,WAAYiC,GAAiBvC,KAAKgE,YAAW,KACrDhE,KAAKM,GAAG,WAAYiC,GAAiBvC,KAAKgE,YAAW,KACrDhE,KAAKM,GAAG,OAAQN,KAAKsC,SACrB,CAKDE,MAAMG,GAAiB,GACtB,OAAGA,EACK3C,KAAKiE,SAASjE,KAAKqC,QAEpBrC,KAAKqC,MACZ,CAKDlB,QAIC,OAHcnB,KAAKwC,OAAM,IACZ,KAAOxC,KAAK8B,IAAM9B,KAAK6B,MACP7B,KAAK6B,GAElC,CAEDR,SAASF,GACR,GAAGA,EAAQnB,KAAK6B,KAAOV,EAAQnB,KAAK8B,IACnC,MAAM,IAAI1B,MAAM,GAAGe,qCAAyCnB,KAAK6B,WAAW7B,KAAK8B,OAElF,MAAMoC,EAAO,KAAOlE,KAAK8B,IAAM9B,KAAK6B,KAC9BW,GAASrB,EAAQnB,KAAK6B,KAAOqC,EACnClE,KAAKqC,OAASG,EACdxC,KAAKgC,OAASb,EACdnB,KAAK0C,OAAOF,EACZ,CAMDwB,WAAWG,GACVnE,KAAKoC,SAAW+B,CAChB,CAMDF,SAASzB,GACR,IAAIG,EAAQH,EAIZ,OAHGA,GAAS,IACXG,GAAS,KAEHA,CACP,CAMDD,OAAOF,GACFxC,KAAKC,UACRD,KAAKC,QAAQsB,MAAM6C,UAAY,UAAU5B,QAE1C,iBCjFI,cAAqB3C,EAC1BC,YAAYC,GACXgC,MAAMhC,EACN,iBCHI,cAAqBF,EAC1BC,YAAYC,GACXgC,MAAMhC,EACN,CAKDsE,QAAQC,GACHtE,KAAKC,UAASD,KAAKC,QAAQsE,UAAYD,EAC3C,CAKDA,OACC,GAAItE,KAAKC,QAAS,OAAOD,KAAKC,QAAQsE,SACtC,CAKDC,QACKxE,KAAKC,UAASD,KAAKC,QAAQsE,UAAY,GAC3C,kCCxBI,cAAsB1E,EAU3BC,YAAYC,EAAmB0E,EAAiBC,GAC/C3C,MAAMhC,GACNC,KAAK2E,SAAU,EACf3E,KAAKyE,QAAUA,EACfzE,KAAK0E,SAAWA,EAChB1E,KAAKM,GAAG,QAASN,KAAK4E,OAAOC,KAAK7E,OAClCA,KAAK8E,aACL,CAMDC,WAAWJ,GAAU,GACpB3E,KAAK2E,QAAUA,EACf3E,KAAK8E,aACL,CAGDE,YACC,OAAOhF,KAAK2E,OACZ,CAGDG,cACK9E,KAAKC,UACRD,KAAKC,QAAQyB,UAAY1B,KAAKgF,YAAchF,KAAKyE,QAAUzE,KAAK0E,SAEjE,CAGDE,SACC5E,KAAK2E,SAAW3E,KAAK2E,QACrB3E,KAAK8E,aACL"}