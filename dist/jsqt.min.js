"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class e{constructor(e){if(this.element=document.getElementById(e),!this.element)throw new Error(`Element with id = ${e} not exists! Please check it.`)}exists(){return!!this.element}on(e,t){this.element&&this.element.addEventListener(e,t)}emit(e){this.element&&this.element.dispatchEvent(e)}setEnabled(e=!0){this.element&&(this.element.disabled=!e)}isEnabled(){return!!this.element&&!this.element.disabled}value(){var e;return this.element?null===(e=this.element)||void 0===e?void 0:e.value:null}setValue(e){this.element&&(this.element.value=e)}setStyles(e){this.element&&(this.element.style=e)}getStyles(){if(this.element)return this.element.style}setClassName(e){this.element&&(this.element.className=e)}getClassName(){if(this.exists())return this.element.className}}exports.Base=e,exports.Button=class extends e{constructor(e){super(e)}},exports.Dial=class extends e{constructor(e,t=0,s=100,n=20){super(e),this._pressed=!1,this._angle=0,this.onRotate=e=>{const t=this.calculateAngle(e,!1);this._pressed&&(this.element.style.transform=`rotate(${t}deg)`)},this.calculateAngle=(e,t=!0)=>{const s=this.element.getBoundingClientRect(),n=s.left+s.width/2,i=s.top+s.height/2;let l=0,h=0;e instanceof MouseEvent&&(l=e.clientX,h=e.clientY),e instanceof TouchEvent&&(l=e.touches[0].clientX,h=e.touches[0].clientY);const a=l-n,o=h-i;let r=Math.atan2(o,a)*(180/Math.PI);return this._angle=r,this.emit(new Event("change")),t&&r<0&&r>=-180&&(r+=180),r},this.min=t,this.max=s,this._value=n,this.element.addEventListener("mousedown",(e=>{this.setPressed(!0),this.onRotate(e)})),this.element.addEventListener("mouseup",(e=>{this.setPressed(!1),this.onRotate(e)})),this.element.addEventListener("touchstart",(()=>this.setPressed(!0))),this.element.addEventListener("touchend",(()=>this.setPressed(!1))),this.element.addEventListener("mousemove",this.onRotate),this.element.addEventListener("touchmove",this.onRotate)}value(){return this._value}angle(){return this._angle}setPressed(e){this._pressed=e}},exports.Input=class extends e{constructor(e){super(e)}},exports.Toggle=class extends e{constructor(e,t,s){super(e),this.checked=!1,this.onStyle=t,this.offStyle=s,this.on("click",this.toggle.bind(this)),this.updateStyle()}setChecked(e=!0){this.checked=e,this.updateStyle()}isChecked(){return this.checked}updateStyle(){this.element&&(this.element.className=this.isChecked()?this.onStyle:this.offStyle)}toggle(){this.checked=!this.checked,this.updateStyle()}};
//# sourceMappingURL=jsqt.min.js.map
